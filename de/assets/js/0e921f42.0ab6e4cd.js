(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[4210],{3905:function(e,o,n){"use strict";n.d(o,{Zo:function(){return p},kt:function(){return u}});var t=n(7294);function r(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function c(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?c(Object(n),!0).forEach((function(o){r(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function l(e,o){if(null==e)return{};var n,t,r=function(e,o){if(null==e)return{};var n,t,r={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],o.indexOf(n)>=0||(r[n]=e[n]);return r}(e,o);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=t.createContext({}),s=function(e){var o=t.useContext(i),n=o;return e&&(n="function"==typeof e?e(o):a(a({},o),e)),n},p=function(e){var o=s(e.components);return t.createElement(i.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},m=t.forwardRef((function(e,o){var n=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,b=m["".concat(i,".").concat(u)]||m[u]||d[u]||c;return n?t.createElement(b,a(a({ref:o},p),{},{components:n})):t.createElement(b,a({ref:o},p))}));function u(e,o){var n=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var c=n.length,a=new Array(c);a[0]=m;var l={};for(var i in o)hasOwnProperty.call(o,i)&&(l[i]=o[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<c;s++)a[s]=n[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1938:function(e,o,n){"use strict";n.r(o),n.d(o,{frontMatter:function(){return a},metadata:function(){return l},toc:function(){return i},default:function(){return p}});var t=n(2122),r=n(9756),c=(n(7294),n(3905)),a={sidebar_position:51},l={unversionedId:"core/developers/pac-protocol-core/client-commands/gobject",id:"core/developers/pac-protocol-core/client-commands/gobject",isDocsHomePage:!1,title:"gobject",description:"Command",source:"@site/docs/core/developers/pac-protocol-core/client-commands/gobject.mdx",sourceDirName:"core/developers/pac-protocol-core/client-commands",slug:"/core/developers/pac-protocol-core/client-commands/gobject",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/gobject",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/core/developers/pac-protocol-core/client-commands/gobject.mdx",version:"current",sidebarPosition:51,frontMatter:{sidebar_position:51},sidebar:"coreSidebar",previous:{title:"getsuperblockbudget",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/getsuperblockbudget"},next:{title:"masternode",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/masternode"}},i=[{value:"Command",id:"command",children:[]}],s={toc:i};function p(e){var o=e.components,n=(0,r.Z)(e,["components"]);return(0,c.kt)("wrapper",(0,t.Z)({},s,n,{components:o,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"command"},"Command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli gobject "command" ...\n')),(0,c.kt)("p",null,'gobject "command" ...\nSet of commands to manage governance objects.'),(0,c.kt)("hr",null),(0,c.kt)("p",null,"Running following help command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help gobject\n")),(0,c.kt)("p",null,"Will produce following output:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"gobject \"command\" ...\nSet of commands to manage governance objects.\n\nAvailable commands:\n  check              - Validate governance object data (proposal only)\n  prepare            - Prepare governance object by signing and creating tx\n  submit             - Submit governance object to network\n  deserialize        - Deserialize governance object from hex string to JSON\n  count              - Count governance objects and votes (additional param: 'json' or 'all', default: 'json')\n  get                - Get governance object by hash\n  getcurrentvotes    - Get only current (tallying) votes for a governance object hash (does not include old votes)\n  list               - List governance objects (can be filtered by signal and/or object type)\n  diff               - List differences since last diff\n  vote-alias         - Vote on a governance object by masternode proTxHash\n  vote-conf          - Vote on a governance object by masternode configured in pacglobal.conf\n  vote-many          - Vote on a governance object by all masternodes for which the voting key is in the wallet\n\n")))}p.isMDXComponent=!0}}]);