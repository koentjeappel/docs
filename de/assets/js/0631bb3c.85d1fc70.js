(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[468],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return i},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},i=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,d=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,g=u["".concat(d,".").concat(m)]||u[m]||p[m]||s;return r?n.createElement(g,a(a({ref:t},i),{},{components:r})):n.createElement(g,a({ref:t},i))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=u;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<s;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6210:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return d},default:function(){return i}});var n=r(2122),o=r(9756),s=(r(7294),r(3905)),a={sidebar_position:5},c={unversionedId:"core/developers/pac-protocol-core/client-commands/getaddresstxids",id:"core/developers/pac-protocol-core/client-commands/getaddresstxids",isDocsHomePage:!1,title:"getaddresstxids",description:"Command",source:"@site/docs/core/developers/pac-protocol-core/client-commands/getaddresstxids.mdx",sourceDirName:"core/developers/pac-protocol-core/client-commands",slug:"/core/developers/pac-protocol-core/client-commands/getaddresstxids",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/getaddresstxids",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/core/developers/pac-protocol-core/client-commands/getaddresstxids.mdx",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"coreSidebar",previous:{title:"getaddressmempool",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/getaddressmempool"},next:{title:"getaddressutxos",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/getaddressutxos"}},d=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],l={toc:d};function i(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"command"},"Command"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli getaddresstxids\n")),(0,s.kt)("p",null,"Returns the txids for an address(es) (requires addressindex to be enabled)."),(0,s.kt)("h2",{id:"arguments"},"Arguments"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "addresses"\n    [\n      "address"  (string) The base58check encoded address\n      ,...\n    ]\n  "start" (number) The start block height\n  "end" (number) The end block height\n}\n')),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'pacglobal-cli getaddresstxids \'{"addresses": ["XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"]}\'\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getaddresstxids", "params": [{"addresses": ["XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"]}] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,s.kt)("h2",{id:"result"},"Result"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'[\n  "transactionid"  #(string) The transaction id\n  ,...\n]\n')),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Running following help command"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help getaddresstxids\n")),(0,s.kt)("p",null,"Will produce following output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'getaddresstxids\n\nReturns the txids for an address(es) (requires addressindex to be enabled).\n\nArguments:\n{\n  "addresses"\n    [\n      "address"  (string) The base58check encoded address\n      ,...\n    ]\n  "start" (number) The start block height\n  "end" (number) The end block height\n}\n\nResult:\n[\n  "transactionid"  (string) The transaction id\n  ,...\n]\n\nExamples:\n> pacglobal-cli getaddresstxids \'{"addresses": ["XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"]}\'\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getaddresstxids", "params": [{"addresses": ["XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"]}] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}i.isMDXComponent=!0}}]);