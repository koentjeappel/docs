(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[6554],{3905:function(e,n,o){"use strict";o.d(n,{Zo:function(){return i},kt:function(){return u}});var t=o(7294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function c(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function d(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=t.createContext({}),s=function(e){var n=t.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):c(c({},n),e)),o},i=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),m=s(o),u=r,f=m["".concat(l,".").concat(u)]||m[u]||p[u]||a;return o?t.createElement(f,c(c({ref:n},i),{},{components:o})):t.createElement(f,c({ref:n},i))}));function u(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,c=new Array(a);c[0]=m;var d={};for(var l in n)hasOwnProperty.call(n,l)&&(d[l]=n[l]);d.originalType=e,d.mdxType="string"==typeof e?e:r,c[1]=d;for(var s=2;s<a;s++)c[s]=o[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},1715:function(e,n,o){"use strict";o.r(n),o.d(n,{frontMatter:function(){return c},metadata:function(){return d},toc:function(){return l},default:function(){return i}});var t=o(2122),r=o(9756),a=(o(7294),o(3905)),c={sidebar_position:76},d={unversionedId:"core/developers/pac-protocol-core/client-commands/addnode",id:"core/developers/pac-protocol-core/client-commands/addnode",isDocsHomePage:!1,title:"addnode",description:"Command",source:"@site/docs/core/developers/pac-protocol-core/client-commands/addnode.mdx",sourceDirName:"core/developers/pac-protocol-core/client-commands",slug:"/core/developers/pac-protocol-core/client-commands/addnode",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/addnode",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/core/developers/pac-protocol-core/client-commands/addnode.mdx",version:"current",sidebarPosition:76,frontMatter:{sidebar_position:76},sidebar:"coreSidebar",previous:{title:"submitblock",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/submitblock"},next:{title:"clearbanned",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/clearbanned"}},l=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>node</code> <span class='asterisk'>*</span>",id:"node-",children:[]},{value:"<code>command</code> <span class='asterisk'>*</span>",id:"command-",children:[]}]},{value:"Examples",id:"examples",children:[]}],s={toc:l};function i(e){var n=e.components,o=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,t.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"command"},"Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli addnode "node" "add|remove|onetry"\n')),(0,a.kt)("p",null,"Attempts to add or remove a node from the addnode list.\nOr try a connection to a node once.\nNodes added using addnode (or -connect) are protected from DoS disconnection and are not required to be\nfull nodes as other outbound peers are (though such peers will not be synced from)."),(0,a.kt)("h2",{id:"arguments"},"Arguments"),(0,a.kt)("h3",{id:"node-"},(0,a.kt)("inlineCode",{parentName:"h3"},"node")," ",(0,a.kt)("span",{class:"asterisk"},"*")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(string, required)")),(0,a.kt)("p",null,"The node (see getpeerinfo for nodes)"),(0,a.kt)("h3",{id:"command-"},(0,a.kt)("inlineCode",{parentName:"h3"},"command")," ",(0,a.kt)("span",{class:"asterisk"},"*")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(string, required)")),(0,a.kt)("p",null,"'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once"),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacglobal-cli addnode "192.168.0.6:9999" "onetry"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "addnode", "params": ["192.168.0.6:9999", "onetry"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Running following help command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help addnode\n")),(0,a.kt)("p",null,"Will produce following output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'addnode "node" "add|remove|onetry"\n\nAttempts to add or remove a node from the addnode list.\nOr try a connection to a node once.\nNodes added using addnode (or -connect) are protected from DoS disconnection and are not required to be\nfull nodes as other outbound peers are (though such peers will not be synced from).\n\nArguments:\n1. "node"     (string, required) The node (see getpeerinfo for nodes)\n2. "command"  (string, required) \'add\' to add a node to the list, \'remove\' to remove a node from the list, \'onetry\' to try a connection to the node once\n\nExamples:\n> pacglobal-cli addnode "192.168.0.6:9999" "onetry"\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "addnode", "params": ["192.168.0.6:9999", "onetry"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}i.isMDXComponent=!0}}]);