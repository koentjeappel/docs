(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[5602],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),i=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=i(n),d=r,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(f,s(s({ref:t},p),{},{components:n})):a.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var i=2;i<o;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5318:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),s={sidebar_position:103},l={unversionedId:"core/developers/pac-protocol-core/client-commands/getstakingstatus",id:"core/developers/pac-protocol-core/client-commands/getstakingstatus",isDocsHomePage:!1,title:"getstakingstatus",description:"Command",source:"@site/docs/core/developers/pac-protocol-core/client-commands/getstakingstatus.mdx",sourceDirName:"core/developers/pac-protocol-core/client-commands",slug:"/core/developers/pac-protocol-core/client-commands/getstakingstatus",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/getstakingstatus",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/core/developers/pac-protocol-core/client-commands/getstakingstatus.mdx",version:"current",sidebarPosition:103,frontMatter:{sidebar_position:103},sidebar:"coreSidebar",previous:{title:"estimatesmartfee",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/estimatesmartfee"},next:{title:"signmessagewithprivkey",permalink:"/de/docs/core/developers/pac-protocol-core/client-commands/signmessagewithprivkey"}},c=[{value:"Command",id:"command",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],i={toc:c};function p(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"command"},"Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli getstakingstatus\n")),(0,o.kt)("p",null,"getstakingstatus\nReturns an object containing various staking information."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacglobal-cli getstakingstatus \n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getstakingstatus", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,o.kt)("h2",{id:"result"},"Result"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "validtime": true|false,          #(boolean) if the chain tip is within staking phases\n  "haveconnections": true|false,    #(boolean) if network connections are present\n  "walletunlocked": true|false,     #(boolean) if the wallet is unlocked\n  "mintablecoins": true|false,      #(boolean) if the wallet has mintable coins\n  "enoughcoins": true|false,        #(boolean) if available coins are greater than reserve balance\n  "mnsync": true|false,             #(boolean) if masternode data is synced\n  "staking status": true|false,     #(boolean) if the wallet is staking or not\n}\n')),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Running following help command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help getstakingstatus\n")),(0,o.kt)("p",null,"Will produce following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'getstakingstatus\nReturns an object containing various staking information.\n\nResult:\n{\n  "validtime": true|false,          (boolean) if the chain tip is within staking phases\n  "haveconnections": true|false,    (boolean) if network connections are present\n  "walletunlocked": true|false,     (boolean) if the wallet is unlocked\n  "mintablecoins": true|false,      (boolean) if the wallet has mintable coins\n  "enoughcoins": true|false,        (boolean) if available coins are greater than reserve balance\n  "mnsync": true|false,             (boolean) if masternode data is synced\n  "staking status": true|false,     (boolean) if the wallet is staking or not\n}\n\nExamples:\n> pacglobal-cli getstakingstatus \n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getstakingstatus", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}p.isMDXComponent=!0}}]);