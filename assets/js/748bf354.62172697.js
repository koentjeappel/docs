(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[8606],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),d=l,f=s["".concat(i,".").concat(d)]||s[d]||m[d]||r;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=s;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:l,o[1]=c;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5313:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return i},toc:function(){return p},default:function(){return m}});var a=n(2122),l=n(9756),r=(n(7294),n(3905)),o=["components"],c={sidebar_position:141},i={unversionedId:"pac-protocol-core/client-commands/unloadwallet",id:"pac-protocol-core/client-commands/unloadwallet",isDocsHomePage:!1,title:"unloadwallet",description:"Command",source:"@site/docs/pac-protocol-core/client-commands/unloadwallet.mdx",sourceDirName:"pac-protocol-core/client-commands",slug:"/pac-protocol-core/client-commands/unloadwallet",permalink:"/pac-protocol-core/client-commands/unloadwallet",editUrl:"https://github.com/pacprotocol/docs/edit/master/docs/pac-protocol-core/client-commands/unloadwallet.mdx",version:"current",sidebarPosition:141,frontMatter:{sidebar_position:141},sidebar:"coreSidebar",previous:{title:"submitblock",permalink:"/pac-protocol-core/client-commands/submitblock"},next:{title:"upgradetohd",permalink:"/pac-protocol-core/client-commands/upgradetohd"}},p=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>wallet_name</code>",id:"wallet_name",children:[]}]},{value:"Examples",id:"examples",children:[]}],u={toc:p};function m(e){var t=e.components,n=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"command"},"Command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli unloadwallet ( "wallet_name" )\n')),(0,r.kt)("p",null,'unloadwallet ( "wallet_name" )\nUnloads the wallet referenced by the request endpoint otherwise unloads the wallet specified in the argument.\nSpecifying the wallet name on a wallet endpoint is invalid.'),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("h3",{id:"wallet_name"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_name")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(string, optional)")),(0,r.kt)("p",null,"The name of the wallet to unload."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli unloadwallet wallet_name\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "unloadwallet", "params": [wallet_name] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Running following help command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help unloadwallet\n")),(0,r.kt)("p",null,"Will produce following output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'unloadwallet ( "wallet_name" )\nUnloads the wallet referenced by the request endpoint otherwise unloads the wallet specified in the argument.\nSpecifying the wallet name on a wallet endpoint is invalid.\nArguments:\n1. "wallet_name"    (string, optional) The name of the wallet to unload.\n\nExamples:\n> pacprotocol-cli unloadwallet wallet_name\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "unloadwallet", "params": [wallet_name] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}m.isMDXComponent=!0}}]);