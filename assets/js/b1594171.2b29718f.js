(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[7370],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5358:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:147},l={unversionedId:"pac-protocol-core/client-commands/verifyislock",id:"pac-protocol-core/client-commands/verifyislock",isDocsHomePage:!1,title:"verifyislock",description:"Command",source:"@site/docs/pac-protocol-core/client-commands/verifyislock.mdx",sourceDirName:"pac-protocol-core/client-commands",slug:"/pac-protocol-core/client-commands/verifyislock",permalink:"/pac-protocol-core/client-commands/verifyislock",editUrl:"https://github.com/pacprotocol/docs/edit/master/docs/pac-protocol-core/client-commands/verifyislock.mdx",version:"current",sidebarPosition:147,frontMatter:{sidebar_position:147},sidebar:"coreSidebar",previous:{title:"verifychainlock",permalink:"/pac-protocol-core/client-commands/verifychainlock"},next:{title:"verifymessage",permalink:"/pac-protocol-core/client-commands/verifymessage"}},s=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>id</code> <span class='asterisk'>*</span>",id:"id-",children:[]},{value:"<code>txid</code> <span class='asterisk'>*</span>",id:"txid-",children:[]},{value:"<code>signature</code> <span class='asterisk'>*</span>",id:"signature-",children:[]},{value:"<code>maxHeight</code>",id:"maxheight",children:[]}]}],p={toc:s};function u(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"command"},"Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli verifyislock "id" "txid" "signature" ( maxHeight )\n')),(0,o.kt)("p",null,'verifyislock "id" "txid" "signature" ( maxHeight )\nTest if a quorum signature is valid for an InstantSend Lock'),(0,o.kt)("h2",{id:"arguments"},"Arguments"),(0,o.kt)("h3",{id:"id-"},(0,o.kt)("inlineCode",{parentName:"h3"},"id")," ",(0,o.kt)("span",{class:"asterisk"},"*")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(string, required)")),(0,o.kt)("p",null,"Request id."),(0,o.kt)("h3",{id:"txid-"},(0,o.kt)("inlineCode",{parentName:"h3"},"txid")," ",(0,o.kt)("span",{class:"asterisk"},"*")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(string, required)")),(0,o.kt)("p",null,"The transaction id."),(0,o.kt)("h3",{id:"signature-"},(0,o.kt)("inlineCode",{parentName:"h3"},"signature")," ",(0,o.kt)("span",{class:"asterisk"},"*")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(string, required)")),(0,o.kt)("p",null,"The InstantSend Lock signature to verify."),(0,o.kt)("h3",{id:"maxheight"},(0,o.kt)("inlineCode",{parentName:"h3"},"maxHeight")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(int, optional)")),(0,o.kt)("p",null,"The maximum height to search quorums from."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Running following help command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help verifyislock\n")),(0,o.kt)("p",null,"Will produce following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'verifyislock "id" "txid" "signature" ( maxHeight )\nTest if a quorum signature is valid for an InstantSend Lock\n\nArguments:\n1. "id"                  (string, required) Request id.\n2. "txid"                (string, required) The transaction id.\n3. "signature"           (string, required) The InstantSend Lock signature to verify.\n4. maxHeight                 (int, optional) The maximum height to search quorums from.\n\n')))}u.isMDXComponent=!0}}]);