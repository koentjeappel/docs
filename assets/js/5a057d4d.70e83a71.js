(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[7554],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(t),d=o,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(g,c(c({ref:n},p),{},{components:t})):r.createElement(g,c({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=u;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=t[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8659:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var r=t(2122),o=t(9756),i=(t(7294),t(3905)),c=["components"],a={sidebar_position:60},l="getmininginfo",s={unversionedId:"developers/pac-protocol-core/client-commands/getmininginfo",id:"developers/pac-protocol-core/client-commands/getmininginfo",isDocsHomePage:!1,title:"getmininginfo",description:"Command",source:"@site/docs/developers/pac-protocol-core/client-commands/getmininginfo.mdx",sourceDirName:"developers/pac-protocol-core/client-commands",slug:"/developers/pac-protocol-core/client-commands/getmininginfo",permalink:"/developers/pac-protocol-core/client-commands/getmininginfo",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/developers/pac-protocol-core/client-commands/getmininginfo.mdx",version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"coreSidebar",previous:{title:"getmerkleblocks",permalink:"/developers/pac-protocol-core/client-commands/getmerkleblocks"},next:{title:"getnettotals",permalink:"/developers/pac-protocol-core/client-commands/getnettotals"}},p=[{value:"Command",id:"command",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],m={toc:p};function u(e){var n=e.components,t=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getmininginfo"},"getmininginfo"),(0,i.kt)("h2",{id:"command"},"Command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli getmininginfo\n")),(0,i.kt)("p",null,"Returns a json object containing mining-related information."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli getmininginfo \n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getmininginfo", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,i.kt)("h2",{id:"result"},"Result"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "blocks": nnn,             #(numeric) The current block\n  "currentblocksize": nnn,   #(numeric) The last block size\n  "currentblocktx": nnn,     #(numeric) The last block transaction\n  "difficulty": xxx.xxxxx    #(numeric) The current difficulty\n  "networkhashps": nnn,      #(numeric) The network hashes per second\n  "pooledtx": n              #(numeric) The size of the mempool\n  "chain": "xxxx",           #(string) current network name as defined in BIP70 #(main, test, regtest)\n  "warnings": "..."          #(string) any network and blockchain warnings\n}\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Running following help command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help getmininginfo\n")),(0,i.kt)("p",null,"Will produce following output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'getmininginfo\n\nReturns a json object containing mining-related information.\nResult:\n{\n  "blocks": nnn,             (numeric) The current block\n  "currentblocksize": nnn,   (numeric) The last block size\n  "currentblocktx": nnn,     (numeric) The last block transaction\n  "difficulty": xxx.xxxxx    (numeric) The current difficulty\n  "networkhashps": nnn,      (numeric) The network hashes per second\n  "pooledtx": n              (numeric) The size of the mempool\n  "chain": "xxxx",           (string) current network name as defined in BIP70 (main, test, regtest)\n  "warnings": "..."          (string) any network and blockchain warnings\n}\n\nExamples:\n> pacprotocol-cli getmininginfo \n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getmininginfo", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}u.isMDXComponent=!0}}]);