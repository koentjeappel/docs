(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[2633],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return s},kt:function(){return u}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(t),u=o,f=m["".concat(i,".").concat(u)]||m[u]||d[u]||c;return t?n.createElement(f,a(a({ref:r},s),{},{components:t})):n.createElement(f,a({ref:r},s))}));function u(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var c=t.length,a=new Array(c);a[0]=m;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var l=2;l<c;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9228:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return a},metadata:function(){return p},toc:function(){return i},default:function(){return s}});var n=t(2122),o=t(9756),c=(t(7294),t(3905)),a={sidebar_position:61},p={unversionedId:"core/developers/pac-protocol-core/client-commands/protx",id:"core/developers/pac-protocol-core/client-commands/protx",isDocsHomePage:!1,title:"protx",description:"Command",source:"@site/docs/core/developers/pac-protocol-core/client-commands/protx.mdx",sourceDirName:"core/developers/pac-protocol-core/client-commands",slug:"/core/developers/pac-protocol-core/client-commands/protx",permalink:"/docs/core/developers/pac-protocol-core/client-commands/protx",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/core/developers/pac-protocol-core/client-commands/protx.mdx",version:"current",sidebarPosition:61,frontMatter:{sidebar_position:61},sidebar:"coreSidebar",previous:{title:"bls",permalink:"/docs/core/developers/pac-protocol-core/client-commands/bls"},next:{title:"quorum",permalink:"/docs/core/developers/pac-protocol-core/client-commands/quorum"}},i=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>command</code> <span class='asterisk'>*</span>",id:"command-",children:[]}]}],l={toc:i};function s(e){var r=e.components,t=(0,o.Z)(e,["components"]);return(0,c.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"command"},"Command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli protx "command" ...\n')),(0,c.kt)("p",null,'protx "command" ...\nSet of commands to execute ProTx related actions.\nTo get help on individual commands, use "help protx command".'),(0,c.kt)("h2",{id:"arguments"},"Arguments"),(0,c.kt)("h3",{id:"command-"},(0,c.kt)("inlineCode",{parentName:"h3"},"command")," ",(0,c.kt)("span",{class:"asterisk"},"*")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"(string, required)")),(0,c.kt)("p",null,"The command to execute"),(0,c.kt)("hr",null),(0,c.kt)("p",null,"Running following help command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help protx\n")),(0,c.kt)("p",null,"Will produce following output:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'protx "command" ...\nSet of commands to execute ProTx related actions.\nTo get help on individual commands, use "help protx command".\n\nArguments:\n1. "command"        (string, required) The command to execute\n\nAvailable commands:\n  register          - Create and send ProTx to network\n  register_fund     - Fund, create and send ProTx to network\n  register_prepare  - Create an unsigned ProTx\n  register_submit   - Sign and submit a ProTx\n  list              - List ProTxs\n  info              - Return information about a ProTx\n  update_service    - Create and send ProUpServTx to network\n  update_registrar  - Create and send ProUpRegTx to network\n  revoke            - Create and send ProUpRevTx to network\n  diff              - Calculate a diff and a proof between two masternode lists\n\n')))}s.isMDXComponent=!0}}]);