(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[9093],{3905:function(e,r,a){"use strict";a.d(r,{Zo:function(){return i},kt:function(){return m}});var n=a(7294);function t(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){t(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function p(e,r){if(null==e)return{};var a,n,t=function(e,r){if(null==e)return{};var a,n,t={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],r.indexOf(a)>=0||(t[a]=e[a]);return t}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var l=n.createContext({}),c=function(e){var r=n.useContext(l),a=r;return e&&(a="function"==typeof e?e(r):s(s({},r),e)),a},i=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var a=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),d=c(a),m=t,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(h,s(s({ref:r},i),{},{components:a})):n.createElement(h,s({ref:r},i))}));function m(e,r){var a=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=a.length,s=new Array(o);s[0]=d;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p.mdxType="string"==typeof e?e:t,s[1]=p;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9179:function(e,r,a){"use strict";a.r(r),a.d(r,{frontMatter:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return i}});var n=a(2122),t=a(9756),o=(a(7294),a(3905)),s={sidebar_position:161},p={unversionedId:"core/developers/pac-protocol-core/client-commands/walletpassphrasechange",id:"core/developers/pac-protocol-core/client-commands/walletpassphrasechange",isDocsHomePage:!1,title:"walletpassphrasechange",description:"Command",source:"@site/docs/core/developers/pac-protocol-core/client-commands/walletpassphrasechange.mdx",sourceDirName:"core/developers/pac-protocol-core/client-commands",slug:"/core/developers/pac-protocol-core/client-commands/walletpassphrasechange",permalink:"/docs/core/developers/pac-protocol-core/client-commands/walletpassphrasechange",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/core/developers/pac-protocol-core/client-commands/walletpassphrasechange.mdx",version:"current",sidebarPosition:161,frontMatter:{sidebar_position:161},sidebar:"coreSidebar",previous:{title:"walletpassphrase",permalink:"/docs/core/developers/pac-protocol-core/client-commands/walletpassphrase"},next:{title:"setstaking",permalink:"/docs/core/developers/pac-protocol-core/client-commands/setstaking"}},l=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>oldpassphrase</code>",id:"oldpassphrase",children:[]},{value:"<code>newpassphrase</code>",id:"newpassphrase",children:[]}]},{value:"Examples",id:"examples",children:[]}],c={toc:l};function i(e){var r=e.components,a=(0,t.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"command"},"Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli walletpassphrasechange "oldpassphrase" "newpassphrase"\n')),(0,o.kt)("p",null,"Changes the wallet passphrase from 'oldpassphrase' to 'newpassphrase'."),(0,o.kt)("h2",{id:"arguments"},"Arguments"),(0,o.kt)("h3",{id:"oldpassphrase"},(0,o.kt)("inlineCode",{parentName:"h3"},"oldpassphrase")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(string)")),(0,o.kt)("p",null,"The current passphrase"),(0,o.kt)("h3",{id:"newpassphrase"},(0,o.kt)("inlineCode",{parentName:"h3"},"newpassphrase")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(string)")),(0,o.kt)("p",null,"The new passphrase"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'pacglobal-cli walletpassphrasechange "old one" "new one"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "walletpassphrasechange", "params": ["old one", "new one"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Running following help command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help walletpassphrasechange\n")),(0,o.kt)("p",null,"Will produce following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'walletpassphrasechange "oldpassphrase" "newpassphrase"\n\nChanges the wallet passphrase from \'oldpassphrase\' to \'newpassphrase\'.\n\nArguments:\n1. "oldpassphrase"      (string) The current passphrase\n2. "newpassphrase"      (string) The new passphrase\n\nExamples:\n> pacglobal-cli walletpassphrasechange "old one" "new one"\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "walletpassphrasechange", "params": ["old one", "new one"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}i.isMDXComponent=!0}}]);