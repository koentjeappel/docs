(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[6589],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return u}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=i(r),u=a,k=m["".concat(l,".").concat(u)]||m[u]||p[u]||o;return r?n.createElement(k,s(s({ref:t},d),{},{components:r})):n.createElement(k,s({ref:t},d))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var i=2;i<o;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3884:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return i},default:function(){return p}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),s=["components"],c={sidebar_position:24},l={unversionedId:"pac-protocol-core/client-commands/generatetoaddress",id:"pac-protocol-core/client-commands/generatetoaddress",isDocsHomePage:!1,title:"generatetoaddress",description:"Command",source:"@site/docs/pac-protocol-core/client-commands/generatetoaddress.mdx",sourceDirName:"pac-protocol-core/client-commands",slug:"/pac-protocol-core/client-commands/generatetoaddress",permalink:"/pac-protocol-core/client-commands/generatetoaddress",editUrl:"https://github.com/pacprotocol/docs/edit/master/docs/pac-protocol-core/client-commands/generatetoaddress.mdx",version:"current",sidebarPosition:24,frontMatter:{sidebar_position:24},sidebar:"coreSidebar",previous:{title:"generate",permalink:"/pac-protocol-core/client-commands/generate"},next:{title:"getaccount",permalink:"/pac-protocol-core/client-commands/getaccount"}},i=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>nblocks</code> <span class='asterisk'>*</span>",id:"nblocks-",children:[]},{value:"<code>address</code> <span class='asterisk'>*</span>",id:"address-",children:[]},{value:"<code>maxtries</code>",id:"maxtries",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],d={toc:i};function p(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"command"},"Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli generatetoaddress nblocks address (maxtries)\n")),(0,o.kt)("p",null,"Mine blocks immediately to a specified address (before the RPC call returns)"),(0,o.kt)("h2",{id:"arguments"},"Arguments"),(0,o.kt)("h3",{id:"nblocks-"},(0,o.kt)("inlineCode",{parentName:"h3"},"nblocks")," ",(0,o.kt)("span",{class:"asterisk"},"*")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(numeric, required)")),(0,o.kt)("p",null,"How many blocks are generated immediately."),(0,o.kt)("h3",{id:"address-"},(0,o.kt)("inlineCode",{parentName:"h3"},"address")," ",(0,o.kt)("span",{class:"asterisk"},"*")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(string, required)")),(0,o.kt)("p",null,"The address to send the newly generated PAC Protocol to."),(0,o.kt)("h3",{id:"maxtries"},(0,o.kt)("inlineCode",{parentName:"h3"},"maxtries")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(numeric, optional)")),(0,o.kt)("p",null,"How many iterations to try (default = 1000000)."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Generate 11 blocks to myaddress"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli generatetoaddress 11 "myaddress"\n')),(0,o.kt)("h2",{id:"result"},"Result"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[ blockhashes ]     #(array) hashes of blocks generated\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Running following help command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help generatetoaddress\n")),(0,o.kt)("p",null,"Will produce following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'generatetoaddress nblocks address (maxtries)\n\nMine blocks immediately to a specified address (before the RPC call returns)\n\nArguments:\n1. nblocks      (numeric, required) How many blocks are generated immediately.\n2. address      (string, required) The address to send the newly generated PAC Protocol to.\n3. maxtries     (numeric, optional) How many iterations to try (default = 1000000).\n\nResult:\n[ blockhashes ]     (array) hashes of blocks generated\n\nExamples:\n\nGenerate 11 blocks to myaddress\n> pacprotocol-cli generatetoaddress 11 "myaddress"\n\n')))}p.isMDXComponent=!0}}]);