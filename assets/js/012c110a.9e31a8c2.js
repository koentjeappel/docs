(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[8602],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,d=u["".concat(i,".").concat(m)]||u[m]||h[m]||a;return n?r.createElement(d,c(c({ref:t},p),{},{components:n})):r.createElement(d,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3562:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),c=["components"],l={sidebar_position:120},i="rescanblockchain",s={unversionedId:"developers/pac-protocol-core/client-commands/rescanblockchain",id:"developers/pac-protocol-core/client-commands/rescanblockchain",isDocsHomePage:!1,title:"rescanblockchain",description:"Command",source:"@site/docs/developers/pac-protocol-core/client-commands/rescanblockchain.mdx",sourceDirName:"developers/pac-protocol-core/client-commands",slug:"/developers/pac-protocol-core/client-commands/rescanblockchain",permalink:"/developers/pac-protocol-core/client-commands/rescanblockchain",editUrl:"https://github.com/pacprotocol/docs/edit/master/docs/developers/pac-protocol-core/client-commands/rescanblockchain.mdx",version:"current",sidebarPosition:120,frontMatter:{sidebar_position:120},sidebar:"coreSidebar",previous:{title:"removeprunedfunds",permalink:"/developers/pac-protocol-core/client-commands/removeprunedfunds"},next:{title:"savemempool",permalink:"/developers/pac-protocol-core/client-commands/savemempool"}},p=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>start_height</code>",id:"start_height",children:[]},{value:"<code>stop_height</code>",id:"stop_height",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],h={toc:p};function u(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rescanblockchain"},"rescanblockchain"),(0,a.kt)("h2",{id:"command"},"Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli rescanblockchain ("start_height") ("stop_height")\n')),(0,a.kt)("p",null,"Rescan the local blockchain for wallet related transactions."),(0,a.kt)("h2",{id:"arguments"},"Arguments"),(0,a.kt)("h3",{id:"start_height"},(0,a.kt)("inlineCode",{parentName:"h3"},"start_height")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(numeric, optional)")),(0,a.kt)("p",null,"block height where the rescan should start"),(0,a.kt)("h3",{id:"stop_height"},(0,a.kt)("inlineCode",{parentName:"h3"},"stop_height")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(numeric, optional)")),(0,a.kt)("p",null,"the last block height that should be scanned"),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli rescanblockchain 100000 120000\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "rescanblockchain", "params": [100000, 120000] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,a.kt)("h2",{id:"result"},"Result"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "start_height"     #(numeric) The block height where the rescan has started. If omitted, rescan started from the genesis block.\n  "stop_height"      #(numeric) The height of the last rescanned block. If omitted, rescan stopped at the chain tip.\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Running following help command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help rescanblockchain\n")),(0,a.kt)("p",null,"Will produce following output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'rescanblockchain ("start_height") ("stop_height")\n\nRescan the local blockchain for wallet related transactions.\n\nArguments:\n1. "start_height"    (numeric, optional) block height where the rescan should start\n2. "stop_height"     (numeric, optional) the last block height that should be scanned\n\nResult:\n{\n  "start_height"     (numeric) The block height where the rescan has started. If omitted, rescan started from the genesis block.\n  "stop_height"      (numeric) The height of the last rescanned block. If omitted, rescan stopped at the chain tip.\n}\n\nExamples:\n> pacprotocol-cli rescanblockchain 100000 120000\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "rescanblockchain", "params": [100000, 120000] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}u.isMDXComponent=!0}}]);