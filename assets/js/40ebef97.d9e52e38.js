(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[6345],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),i=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=i(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(t),m=r,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(k,c(c({ref:n},p),{},{components:t})):o.createElement(k,c({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var i=2;i<a;i++)c[i]=t[i];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5544:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return p},default:function(){return d}});var o=t(2122),r=t(9756),a=(t(7294),t(3905)),c=["components"],l={sidebar_position:107},s="lockunspent",i={unversionedId:"developers/pac-protocol-core/client-commands/lockunspent",id:"developers/pac-protocol-core/client-commands/lockunspent",isDocsHomePage:!1,title:"lockunspent",description:"Command",source:"@site/docs/developers/pac-protocol-core/client-commands/lockunspent.mdx",sourceDirName:"developers/pac-protocol-core/client-commands",slug:"/developers/pac-protocol-core/client-commands/lockunspent",permalink:"/developers/pac-protocol-core/client-commands/lockunspent",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/developers/pac-protocol-core/client-commands/lockunspent.mdx",version:"current",sidebarPosition:107,frontMatter:{sidebar_position:107},sidebar:"coreSidebar",previous:{title:"loadwallet",permalink:"/developers/pac-protocol-core/client-commands/loadwallet"},next:{title:"logging",permalink:"/developers/pac-protocol-core/client-commands/logging"}},p=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>unlock</code> <span class='asterisk'>*</span>",id:"unlock-",children:[]},{value:"<code>transactions</code>",id:"transactions",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],u={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lockunspent"},"lockunspent"),(0,a.kt)("h2",{id:"command"},"Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli lockunspent unlock ([{"txid":"txid","vout":n},...])\n')),(0,a.kt)("p",null,"Updates list of temporarily unspendable outputs.\nTemporarily lock (unlock=false) or unlock (unlock=true) specified transaction outputs.\nIf no transaction outputs are specified when unlocking then all current locked transaction outputs are unlocked.\nA locked transaction output will not be chosen by automatic coin selection, when spending pacprotocols.\nLocks are stored in memory only. Nodes start with zero locked outputs, and the locked output list\nis always cleared (by virtue of process exit) when a node stops or fails.\nAlso see the listunspent call"),(0,a.kt)("h2",{id:"arguments"},"Arguments"),(0,a.kt)("h3",{id:"unlock-"},(0,a.kt)("inlineCode",{parentName:"h3"},"unlock")," ",(0,a.kt)("span",{class:"asterisk"},"*")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(boolean, required)")),(0,a.kt)("p",null,"Whether to unlock (true) or lock (false) the specified transactions"),(0,a.kt)("h3",{id:"transactions"},(0,a.kt)("inlineCode",{parentName:"h3"},"transactions")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(string, optional)")),(0,a.kt)("p",null,"A json array of objects. Each object the txid (string) vout (numeric)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[         (json array of json objects)\n     {\n       "txid":"id",    (string) The transaction id\n       "vout": n       (numeric) The output number\n}\n     ,...\n]\n')),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"List the unspent transactions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli listunspent \n")),(0,a.kt)("p",null,"Lock an unspent transaction"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli lockunspent false "[{\\"txid\\":\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\",\\"vout\\":1}]"\n')),(0,a.kt)("p",null,"List the locked transactions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli listlockunspent \n")),(0,a.kt)("p",null,"Unlock the transaction again"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli lockunspent true "[{\\"txid\\":\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\",\\"vout\\":1}]"\n')),(0,a.kt)("p",null,"As a json rpc call"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "lockunspent", "params": [false, "[{\\"txid\\":\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\",\\"vout\\":1}]"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,a.kt)("h2",{id:"result"},"Result"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"true|false    #(boolean) Whether the command was successful or not\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Running following help command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help lockunspent\n")),(0,a.kt)("p",null,"Will produce following output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'lockunspent unlock ([{"txid":"txid","vout":n},...])\n\nUpdates list of temporarily unspendable outputs.\nTemporarily lock (unlock=false) or unlock (unlock=true) specified transaction outputs.\nIf no transaction outputs are specified when unlocking then all current locked transaction outputs are unlocked.\nA locked transaction output will not be chosen by automatic coin selection, when spending pacprotocols.\nLocks are stored in memory only. Nodes start with zero locked outputs, and the locked output list\nis always cleared (by virtue of process exit) when a node stops or fails.\nAlso see the listunspent call\n\nArguments:\n1. unlock            (boolean, required) Whether to unlock (true) or lock (false) the specified transactions\n2. "transactions"  (string, optional) A json array of objects. Each object the txid (string) vout (numeric)\n     [           (json array of json objects)\n       {\n         "txid":"id",    (string) The transaction id\n         "vout": n         (numeric) The output number\n       }\n       ,...\n     ]\n\nResult:\ntrue|false    (boolean) Whether the command was successful or not\n\nExamples:\n\nList the unspent transactions\n> pacprotocol-cli listunspent \n\nLock an unspent transaction\n> pacprotocol-cli lockunspent false "[{\\"txid\\":\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\",\\"vout\\":1}]"\n\nList the locked transactions\n> pacprotocol-cli listlockunspent \n\nUnlock the transaction again\n> pacprotocol-cli lockunspent true "[{\\"txid\\":\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\",\\"vout\\":1}]"\n\nAs a json rpc call\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "lockunspent", "params": [false, "[{\\"txid\\":\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\",\\"vout\\":1}]"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}d.isMDXComponent=!0}}]);