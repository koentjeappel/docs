(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[4873],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=i(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var i=2;i<r;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7854:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return i},default:function(){return p}});var a=n(2122),o=n(9756),r=(n(7294),n(3905)),s=["components"],c={sidebar_position:74},l={unversionedId:"pac-protocol-core/client-commands/getstakingstatus",id:"pac-protocol-core/client-commands/getstakingstatus",isDocsHomePage:!1,title:"getstakingstatus",description:"Command",source:"@site/docs/pac-protocol-core/client-commands/getstakingstatus.mdx",sourceDirName:"pac-protocol-core/client-commands",slug:"/pac-protocol-core/client-commands/getstakingstatus",permalink:"/pac-protocol-core/client-commands/getstakingstatus",editUrl:"https://github.com/pacprotocol/docs/edit/master/docs/pac-protocol-core/client-commands/getstakingstatus.mdx",version:"current",sidebarPosition:74,frontMatter:{sidebar_position:74},sidebar:"coreSidebar",previous:{title:"getspentinfo",permalink:"/pac-protocol-core/client-commands/getspentinfo"},next:{title:"getsuperblockbudget",permalink:"/pac-protocol-core/client-commands/getsuperblockbudget"}},i=[{value:"Command",id:"command",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],u={toc:i};function p(e){var t=e.components,n=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"command"},"Command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli getstakingstatus\n")),(0,r.kt)("p",null,"getstakingstatus\nReturns an object containing various staking information."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli getstakingstatus \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getstakingstatus", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,r.kt)("h2",{id:"result"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "validtime": true|false,          #(boolean) if the chain tip is within staking phases\n  "haveconnections": true|false,    #(boolean) if network connections are present\n  "walletunlocked": true|false,     #(boolean) if the wallet is unlocked\n  "mintablecoins": true|false,      #(boolean) if the wallet has mintable coins\n  "enoughcoins": true|false,        #(boolean) if available coins are greater than reserve balance\n  "mnsync": true|false,             #(boolean) if masternode data is synced\n  "staking status": true|false,     #(boolean) if the wallet is staking or not\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Running following help command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help getstakingstatus\n")),(0,r.kt)("p",null,"Will produce following output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'getstakingstatus\nReturns an object containing various staking information.\n\nResult:\n{\n  "validtime": true|false,          (boolean) if the chain tip is within staking phases\n  "haveconnections": true|false,    (boolean) if network connections are present\n  "walletunlocked": true|false,     (boolean) if the wallet is unlocked\n  "mintablecoins": true|false,      (boolean) if the wallet has mintable coins\n  "enoughcoins": true|false,        (boolean) if available coins are greater than reserve balance\n  "mnsync": true|false,             (boolean) if masternode data is synced\n  "staking status": true|false,     (boolean) if the wallet is staking or not\n}\n\nExamples:\n> pacprotocol-cli getstakingstatus \n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getstakingstatus", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}p.isMDXComponent=!0}}]);