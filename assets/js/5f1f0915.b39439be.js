(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[37],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=l.createContext({}),s=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return l.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},u=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return n?l.createElement(f,o(o({ref:t},p),{},{components:n})):l.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<r;s++)o[s]=n[s];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7208:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var l=n(2122),a=n(9756),r=(n(7294),n(3905)),o=["components"],c={sidebar_position:106},i="loadwallet",s={unversionedId:"developers/pac-protocol-core/client-commands/loadwallet",id:"developers/pac-protocol-core/client-commands/loadwallet",isDocsHomePage:!1,title:"loadwallet",description:"Command",source:"@site/docs/developers/pac-protocol-core/client-commands/loadwallet.mdx",sourceDirName:"developers/pac-protocol-core/client-commands",slug:"/developers/pac-protocol-core/client-commands/loadwallet",permalink:"/developers/pac-protocol-core/client-commands/loadwallet",editUrl:"https://github.com/pacprotocol/docs/edit/master/docs/developers/pac-protocol-core/client-commands/loadwallet.mdx",version:"current",sidebarPosition:106,frontMatter:{sidebar_position:106},sidebar:"coreSidebar",previous:{title:"listwallets",permalink:"/developers/pac-protocol-core/client-commands/listwallets"},next:{title:"lockunspent",permalink:"/developers/pac-protocol-core/client-commands/lockunspent"}},p=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>filename</code> <span class='asterisk'>*</span>",id:"filename-",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],d={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"loadwallet"},"loadwallet"),(0,r.kt)("h2",{id:"command"},"Command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli loadwallet "filename"\n')),(0,r.kt)("p",null,"Loads a wallet from a wallet file or directory.\nNote that all wallet command-line options used when starting pacprotocold will be\napplied to the new wallet (eg -zapwallettxes, upgradewallet, rescan, etc)."),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("h3",{id:"filename-"},(0,r.kt)("inlineCode",{parentName:"h3"},"filename")," ",(0,r.kt)("span",{class:"asterisk"},"*")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(string, required)")),(0,r.kt)("p",null,"The wallet directory or .dat file."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli loadwallet "test.dat"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "loadwallet", "params": ["test.dat"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,r.kt)("h2",{id:"result"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name" :    &lt;wallet_name&gt;,        #(string) The wallet name if loaded successfully.\n  "warning" : &lt;warning&gt;,            #(string) Warning message if wallet was not loaded cleanly.\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Running following help command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help loadwallet\n")),(0,r.kt)("p",null,"Will produce following output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'loadwallet "filename"\n\nLoads a wallet from a wallet file or directory.\nNote that all wallet command-line options used when starting pacprotocold will be\napplied to the new wallet (eg -zapwallettxes, upgradewallet, rescan, etc).\n\nArguments:\n1. "filename"    (string, required) The wallet directory or .dat file.\n\nResult:\n{\n  "name" :    <wallet_name>,        (string) The wallet name if loaded successfully.\n  "warning" : <warning>,            (string) Warning message if wallet was not loaded cleanly.\n}\n\nExamples:\n> pacprotocol-cli loadwallet "test.dat"\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "loadwallet", "params": ["test.dat"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}u.isMDXComponent=!0}}]);