(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[9506],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return s},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),p=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||c;return r?t.createElement(f,a(a({ref:n},s),{},{components:r})):t.createElement(f,a({ref:n},s))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<c;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2037:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return a},metadata:function(){return l},toc:function(){return i},default:function(){return s}});var t=r(2122),o=r(9756),c=(r(7294),r(3905)),a={sidebar_position:47},l={unversionedId:"core/developers/pac-protocol-core/client-commands/getgovernanceinfo",id:"core/developers/pac-protocol-core/client-commands/getgovernanceinfo",isDocsHomePage:!1,title:"getgovernanceinfo",description:"Command",source:"@site/docs/core/developers/pac-protocol-core/client-commands/getgovernanceinfo.mdx",sourceDirName:"core/developers/pac-protocol-core/client-commands",slug:"/core/developers/pac-protocol-core/client-commands/getgovernanceinfo",permalink:"/docs/core/developers/pac-protocol-core/client-commands/getgovernanceinfo",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/core/developers/pac-protocol-core/client-commands/getgovernanceinfo.mdx",version:"current",sidebarPosition:47,frontMatter:{sidebar_position:47},sidebar:"coreSidebar",previous:{title:"uptime",permalink:"/docs/core/developers/pac-protocol-core/client-commands/uptime"},next:{title:"getpoolinfo",permalink:"/docs/core/developers/pac-protocol-core/client-commands/getpoolinfo"}},i=[{value:"Command",id:"command",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],p={toc:i};function s(e){var n=e.components,r=(0,o.Z)(e,["components"]);return(0,c.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"command"},"Command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli getgovernanceinfo\n")),(0,c.kt)("p",null,"getgovernanceinfo\nReturns an object containing governance parameters."),(0,c.kt)("h2",{id:"examples"},"Examples"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"pacglobal-cli getgovernanceinfo \n")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getgovernanceinfo", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,c.kt)("h2",{id:"result"},"Result"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "governanceminquorum": xxxxx,           #(numeric) the absolute minimum number of votes needed to trigger a governance action\n  "proposalfee": xxx.xx,                  #(numeric) the collateral transaction fee which must be paid to create a proposal in PAC\n  "superblockcycle": xxxxx,               #(numeric) the number of blocks between superblocks\n  "lastsuperblock": xxxxx,                #(numeric) the block number of the last superblock\n  "nextsuperblock": xxxxx,                #(numeric) the block number of the next superblock\n}\n')),(0,c.kt)("hr",null),(0,c.kt)("p",null,"Running following help command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help getgovernanceinfo\n")),(0,c.kt)("p",null,"Will produce following output:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'getgovernanceinfo\nReturns an object containing governance parameters.\n\nResult:\n{\n  "governanceminquorum": xxxxx,           (numeric) the absolute minimum number of votes needed to trigger a governance action\n  "proposalfee": xxx.xx,                  (numeric) the collateral transaction fee which must be paid to create a proposal in PAC\n  "superblockcycle": xxxxx,               (numeric) the number of blocks between superblocks\n  "lastsuperblock": xxxxx,                (numeric) the block number of the last superblock\n  "nextsuperblock": xxxxx,                (numeric) the block number of the next superblock\n}\n\nExamples:\n> pacglobal-cli getgovernanceinfo \n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getgovernanceinfo", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}s.isMDXComponent=!0}}]);