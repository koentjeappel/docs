(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[7640],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return u}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),i=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=i(e.components);return o.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=i(t),u=r,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||a;return t?o.createElement(h,l(l({ref:n},s),{},{components:t})):o.createElement(h,l({ref:n},s))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=d;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var i=2;i<a;i++)l[i]=t[i];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9258:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return p},metadata:function(){return c},toc:function(){return i},default:function(){return m}});var o=t(2122),r=t(9756),a=(t(7294),t(3905)),l=["components"],p={sidebar_position:142},c={unversionedId:"pac-protocol-core/client-commands/upgradetohd",id:"pac-protocol-core/client-commands/upgradetohd",isDocsHomePage:!1,title:"upgradetohd",description:"Command",source:"@site/docs/pac-protocol-core/client-commands/upgradetohd.mdx",sourceDirName:"pac-protocol-core/client-commands",slug:"/pac-protocol-core/client-commands/upgradetohd",permalink:"/pac-protocol-core/client-commands/upgradetohd",editUrl:"https://github.com/pacprotocol/docs/edit/master/docs/pac-protocol-core/client-commands/upgradetohd.mdx",version:"current",sidebarPosition:142,frontMatter:{sidebar_position:142},sidebar:"coreSidebar",previous:{title:"unloadwallet",permalink:"/pac-protocol-core/client-commands/unloadwallet"},next:{title:"uptime",permalink:"/pac-protocol-core/client-commands/uptime"}},i=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>mnemonic</code>",id:"mnemonic",children:[]},{value:"<code>mnemonicpassphrase</code>",id:"mnemonicpassphrase",children:[]},{value:"<code>walletpassphrase</code>",id:"walletpassphrase",children:[]}]},{value:"Examples",id:"examples",children:[]}],s={toc:i};function m(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"command"},"Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli upgradetohd ( "mnemonic" "mnemonicpassphrase" "walletpassphrase" )\n')),(0,a.kt)("p",null,"Upgrades non-HD wallets to HD."),(0,a.kt)("p",null,"Warning: You will need to make a new backup of your wallet after setting the HD wallet mnemonic."),(0,a.kt)("h2",{id:"arguments"},"Arguments"),(0,a.kt)("h3",{id:"mnemonic"},(0,a.kt)("inlineCode",{parentName:"h3"},"mnemonic")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},'(string, optional, default="")')),(0,a.kt)("p",null,'Mnemonic as defined in BIP39 to use for the new HD wallet.\nUse an empty string "" to generate a new random mnemonic.'),(0,a.kt)("h3",{id:"mnemonicpassphrase"},(0,a.kt)("inlineCode",{parentName:"h3"},"mnemonicpassphrase")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},'(string, optional, default="")')),(0,a.kt)("p",null,"Optional mnemonic passphrase as defined in BIP39"),(0,a.kt)("h3",{id:"walletpassphrase"},(0,a.kt)("inlineCode",{parentName:"h3"},"walletpassphrase")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"(string, optional)")),(0,a.kt)("p",null,"If your wallet is encrypted you must have your wallet passphrase here.\nIf your wallet is not encrypted specifying wallet passphrase will trigger wallet encryption."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli upgradetohd \n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli upgradetohd "mnemonicword1 ... mnemonicwordN"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli upgradetohd "mnemonicword1 ... mnemonicwordN" "mnemonicpassphrase"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pacprotocol-cli upgradetohd "mnemonicword1 ... mnemonicwordN" "mnemonicpassphrase" "walletpassphrase"\n')),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Running following help command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help upgradetohd\n")),(0,a.kt)("p",null,"Will produce following output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'upgradetohd ( "mnemonic" "mnemonicpassphrase" "walletpassphrase" )\n\nUpgrades non-HD wallets to HD.\n\nWarning: You will need to make a new backup of your wallet after setting the HD wallet mnemonic.\n\nArguments:\n1. "mnemonic"             (string, optional, default="") Mnemonic as defined in BIP39 to use for the new HD wallet.\n                          Use an empty string "" to generate a new random mnemonic.\n2. "mnemonicpassphrase"   (string, optional, default="") Optional mnemonic passphrase as defined in BIP39\n3. "walletpassphrase"     (string, optional) If your wallet is encrypted you must have your wallet passphrase here.\n                          If your wallet is not encrypted specifying wallet passphrase will trigger wallet encryption.\n\nExamples:\n> pacprotocol-cli upgradetohd \n> pacprotocol-cli upgradetohd "mnemonicword1 ... mnemonicwordN"\n> pacprotocol-cli upgradetohd "mnemonicword1 ... mnemonicwordN" "mnemonicpassphrase"\n> pacprotocol-cli upgradetohd "mnemonicword1 ... mnemonicwordN" "mnemonicpassphrase" "walletpassphrase"\n\n')))}m.isMDXComponent=!0}}]);