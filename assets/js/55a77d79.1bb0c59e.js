(self.webpackChunkpac_protocol_docs=self.webpackChunkpac_protocol_docs||[]).push([[8839],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},858:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i=["components"],l={sidebar_position:101},s="listreceivedbyaddress",c={unversionedId:"developers/pac-protocol-core/client-commands/listreceivedbyaddress",id:"developers/pac-protocol-core/client-commands/listreceivedbyaddress",isDocsHomePage:!1,title:"listreceivedbyaddress",description:"Command",source:"@site/docs/developers/pac-protocol-core/client-commands/listreceivedbyaddress.mdx",sourceDirName:"developers/pac-protocol-core/client-commands",slug:"/developers/pac-protocol-core/client-commands/listreceivedbyaddress",permalink:"/developers/pac-protocol-core/client-commands/listreceivedbyaddress",editUrl:"https://github.com/pacprotocol/docs/edit/master/website/docs/developers/pac-protocol-core/client-commands/listreceivedbyaddress.mdx",version:"current",sidebarPosition:101,frontMatter:{sidebar_position:101},sidebar:"coreSidebar",previous:{title:"listreceivedbyaccount",permalink:"/developers/pac-protocol-core/client-commands/listreceivedbyaccount"},next:{title:"listsinceblock",permalink:"/developers/pac-protocol-core/client-commands/listsinceblock"}},d=[{value:"Command",id:"command",children:[]},{value:"Arguments",id:"arguments",children:[{value:"<code>minconf</code>",id:"minconf",children:[]},{value:"<code>addlocked</code>",id:"addlocked",children:[]},{value:"<code>include_empty</code>",id:"include_empty",children:[]},{value:"<code>include_watchonly</code>",id:"include_watchonly",children:[]},{value:"<code>address_filter</code>",id:"address_filter",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Result",id:"result",children:[]}],p={toc:d};function u(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"listreceivedbyaddress"},"listreceivedbyaddress"),(0,o.kt)("h2",{id:"command"},"Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli listreceivedbyaddress ( minconf addlocked include_empty include_watchonly address_filter )\n")),(0,o.kt)("p",null,"List incoming payments grouped by receiving address."),(0,o.kt)("h2",{id:"arguments"},"Arguments"),(0,o.kt)("h3",{id:"minconf"},(0,o.kt)("inlineCode",{parentName:"h3"},"minconf")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(numeric, optional, default=1)")),(0,o.kt)("p",null,"The minimum number of confirmations before payments are included."),(0,o.kt)("h3",{id:"addlocked"},(0,o.kt)("inlineCode",{parentName:"h3"},"addlocked")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(bool, optional, default=false)")),(0,o.kt)("p",null,"Whether to include transactions locked via InstantSend."),(0,o.kt)("h3",{id:"include_empty"},(0,o.kt)("inlineCode",{parentName:"h3"},"include_empty")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(bool, optional, default=false)")),(0,o.kt)("p",null,"Whether to include addresses that haven't received any payments."),(0,o.kt)("h3",{id:"include_watchonly"},(0,o.kt)("inlineCode",{parentName:"h3"},"include_watchonly")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"( bool, optional, default=false)")),(0,o.kt)("p",null,"Whether to include watch-only addresses (see 'importaddress')."),(0,o.kt)("h3",{id:"address_filter"},(0,o.kt)("inlineCode",{parentName:"h3"},"address_filter")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"(string, optional)")),(0,o.kt)("p",null,"If present, only return information on this address."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli listreceivedbyaddress \n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacprotocol-cli listreceivedbyaddress 6 false true\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "listreceivedbyaddress", "params": [6, false, true, true] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "listreceivedbyaddress", "params": [6, false, true, true, "XbtdLrTsrPDhGy1wXtwKYoBpuKovE3JeBK"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n')),(0,o.kt)("h2",{id:"result"},"Result"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'[\n  {\n    "involvesWatchonly" : true,        #(bool) Only returned if imported addresses were involved in transaction\n    "address" : "receivingaddress",    #(string) The receiving address\n    "account" : "accountname",         #(string) Backwards compatible alias for label.\n    "amount" : x.xxx,                  #(numeric) The total amount in PAC received by the address\n    "confirmations" : n                #(numeric) The number of confirmations of the most recent transaction included.\n                                                 If \'addlocked\' is true, the number of confirmations can be less than\n                                                 configured for transactions locked via InstantSend\n    "label" : "label",               #(string) The label of the receiving address. The default label is "".\n    "txids": [\n       "txid",                         #(string) The ids of transactions received with the address \n       ...\n    ]\n  }\n  ,...\n]\n')),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Running following help command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," pacprotocol-cli help listreceivedbyaddress\n")),(0,o.kt)("p",null,"Will produce following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'listreceivedbyaddress ( minconf addlocked include_empty include_watchonly address_filter )\n\nList incoming payments grouped by receiving address.\n\nArguments:\n1. minconf           (numeric, optional, default=1) The minimum number of confirmations before payments are included.\n2. addlocked         (bool, optional, default=false) Whether to include transactions locked via InstantSend.\n3. include_empty     (bool, optional, default=false) Whether to include addresses that haven\'t received any payments.\n4. include_watchonly (bool, optional, default=false) Whether to include watch-only addresses (see \'importaddress\').\n5. address_filter    (string, optional) If present, only return information on this address.\n\nResult:\n[\n  {\n    "involvesWatchonly" : true,        (bool) Only returned if imported addresses were involved in transaction\n    "address" : "receivingaddress",    (string) The receiving address\n    "account" : "accountname",         (string) Backwards compatible alias for label.\n    "amount" : x.xxx,                  (numeric) The total amount in PAC received by the address\n    "confirmations" : n                (numeric) The number of confirmations of the most recent transaction included.\n                                                 If \'addlocked\' is true, the number of confirmations can be less than\n                                                 configured for transactions locked via InstantSend\n    "label" : "label",               (string) The label of the receiving address. The default label is "".\n    "txids": [\n       "txid",                         (string) The ids of transactions received with the address \n       ...\n    ]\n  }\n  ,...\n]\n\nExamples:\n> pacprotocol-cli listreceivedbyaddress \n> pacprotocol-cli listreceivedbyaddress 6 false true\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "listreceivedbyaddress", "params": [6, false, true, true] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "listreceivedbyaddress", "params": [6, false, true, true, "XbtdLrTsrPDhGy1wXtwKYoBpuKovE3JeBK"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:1111/\n\n')))}u.isMDXComponent=!0}}]);